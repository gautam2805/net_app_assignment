pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out the source code'
                // git clone or checkout steps if needed
            }
        }

        // stage('Build and Test (Pytest)') {
        //     steps {
        //         node('any') {  // Specify 'any' as the label
        //             echo 'Setting up Python environment'

        //             // Create and activate virtual environment
        //             sh 'python3 -m venv venv'
        //             sh 'source venv/bin/activate'

        //             // Install any required Python packages using pip
        //             sh 'pip install pytest'  // Add other packages as needed

        //             echo 'Running Pytest'
        //             sh 'pytest'
        //         }
        //     }
        // }

        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "gautam2805/netappassignment:${BUILD_NUMBER}"
                REGISTRY_CREDENTIALS = credentials('docker-cred')
                DOCKERFILE_PATH = 'assignment_app'
            }
            steps {
                script {
                    sh "docker build -t ${DOCKER_IMAGE} -f ${DOCKERFILE_PATH}/Dockerfile ${DOCKERFILE_PATH}"
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                        dockerImage.push()
                    }
                }
            }
        }
    
        stage('Update APP Deployment File') {
           environment {
              GIT_REPO_NAME = "netappassignment"
              GIT_USER_NAME = "gautam2805"
            }
           steps {
             dir('NET_APP_ASSIGNMENT/assignment_app_manifest') {
              withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "gautampeace30@gmail.com"
                    git config user.name "gautam2805"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" deployment.yml
                    git add deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
                 }
              }
           }
        }
     } 
}