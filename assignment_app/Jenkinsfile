pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out the source code'
                // git clone or checkout steps if needed
            }
        }

        stage('Build and Test (Pytest)') {
            steps {
                // Install python3-venv package
                sh 'apt-get update'
                sh 'apt-get install -y python3-venv'

                // Create and activate virtual environment
                sh 'python3 -m venv venv'
                sh 'source venv/bin/activate'

                // Install any required Python packages using pip
                sh 'pip install pytest'  // Add other packages as needed
                
                echo 'Running Pytest'
                sh 'pytest'
            }
        }

        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "gautam2805/netappassignment:${BUILD_NUMBER}"
                REGISTRY_CREDENTIALS = credentials('docker-cred')
            }
            steps {
                script {
                    sh 'docker build -t ${DOCKER_IMAGE} .'
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                        dockerImage.push()
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up'
            sh 'deactivate'  // Deactivate the virtual environment
            sh 'rm -rf __pycache__'  // Optionally remove __pycache__
        }
    }
}